@startuml
title iza domain model diagram

namespace オブジェクトドメイン <<Cloud>> {
    class オブジェクト {
        ID
        デプロイメントID
        オブジェクトクレデンシャルID
        オブジェクトパスID

        新規作成()
    }
    オブジェクト *-- デプロイメントドメイン.デプロイメント
    オブジェクト *-- オブジェクトクレデンシャル
    オブジェクト *-- オブジェクトパス

    class オブジェクトレポジトリ {
        永続化()
        デプロイメントIDで複数オブジェクト取得()
    }
    オブジェクトレポジトリ *-- オブジェクト
    オブジェクトレポジトリ *-- デプロイメントドメイン.デプロイメント

    class オブジェクトアプリ {
        オブジェクト追加()
        オブジェクトクレデンシャル追加()
        オブジェクト配置()
    }
    オブジェクトアプリ *-- オブジェクト
    オブジェクトアプリ *-- オブジェクトレポジトリ
    オブジェクトアプリ *-- クレデンシャル
    オブジェクトアプリ *-- クレデンシャルレポジトリ
    オブジェクトアプリ *-- オブジェクト配置サービス

    class オブジェクトパス {
        ID
        ローカルパス
        リモートパス

        新規作成()
    }

    class オブジェクトパスレポジトリ {
        永続化()
        オブジェクトでオブジェクトパス取得()
    }
    オブジェクトパスレポジトリ *-- オブジェクトパス

    class クレデンシャル {
        ID
        オブジェクトクレデンシャルの種類

        新規作成()
    }
    クレデンシャル *-- クレデンシャルの種類

    enum クレデンシャルの種類 {
        SSH接続
    }
    クレデンシャルの種類 *-- クレデンシャルドメイン.SSH接続

    class サーバー {
        ID
        ホスト名
        リモートユーザーID
    }
    サーバー *-- リモートユーザー

    class リモートユーザー {
        ID
        パスワード
    }

    class オブジェクト配置サービス {
        オブジェクト配置()
    }
    オブジェクト配置サービス *-- オブジェクトパス
    オブジェクト配置サービス *-- オブジェクトクレデンシャル
}

namespace コマンドドメイン <<Cloud>> {
    class コマンド {
        ID
        デプロイメントID
        コマンドクレデンシャルID
        コマンド情報ID
    }
    コマンド *-- デプロイメントドメイン.デプロイメント
    コマンド *-- クレデンシャル
    コマンド *-- コマンド情報

    class コマンドレポジトリ {
        ローカルコマンド追加()
        グローバルコマンド追加()
    }
    コマンドレポジトリ *-- コマンド

    class コマンドアプリ {
        ローカルコマンド追加()
        グローバルコマンド追加()
    }
    コマンドアプリ *-- コマンド
    コマンドアプリ *-- コマンドレポジトリ

    class コマンド情報 {
        ID
        コマンド文字列
        実行位置
    }

    enum 実行位置 {
        オブジェクト配置前
        オブジェクト配置後
    }

    class コマンド情報レポジトリ {

    }
    コマンド情報レポジトリ *-- コマンド

    class クレデンシャル {
        ID
        クレデンシャルの種類
    }

    enum クレデンシャルの種類 {
        SSH接続
    }
    クレデンシャルの種類 *-- クレデンシャルドメイン.SSH接続

    class コマンド実行サービス {
        コマンド実行()
    }
    コマンド実行サービス *-- コマンド情報
    コマンド実行サービス *-- クレデンシャル
    コマンド実行サービス *-- クレデンシャルドメイン.SSH接続
}

namespace クレデンシャルドメイン <<Cloud>> {
    class クレデンシャルアプリ {
        ローカルクレデンシャル追加()
        グローバルクレデンシャル追加()
    }
    クレデンシャルアプリ *-- SSH接続
    クレデンシャルアプリ *-- SSH接続レポジトリ

    class SSH接続 {
        ID
        クレデンシャルID
        サーバーID
        管理者権限フラグ∂
    }
    SSH接続レポジトリ *-- コマンドドメイン.クレデンシャル
    SSH接続レポジトリ *-- オブジェクトドメイン.クレデンシャル
    SSH接続 *-- サーバー

    class SSH接続レポジトリ {
        永続化()
        クレデンシャルIDからSSH接続を取得()
    }
    SSH接続レポジトリ *-- SSH接続
    SSH接続レポジトリ *-- コマンドドメイン.クレデンシャル
    SSH接続レポジトリ *-- オブジェクトドメイン.クレデンシャル

    class サーバー {
        ID
        ホスト名
        リモートユーザーID
    }

    class リモートユーザー {
        ID
        パスワード
    }
}

namespace デプロイメントドメイン <<Cloud>> {
    class デプロイメント {
        ID
        ワーキングディレクトリ

        新規作成()
    }

    class デプロイメントレポジトリ {
        永続化()
        ワーキングディレクトリでデプロイメントを取得()
    }
    デプロイメントレポジトリ *-- デプロイメント

    class マスターデプロイメント {
        ワーキングディレクトリ
        デプロイメントID
    }
    マスターデプロイメント *-- デプロイメント

    class マスターデプロイメントレポジトリ {
        永続化()
        ワーキングディレクトリでマスターデプロイメントを取得()
        更新()
    }
    マスターデプロイメントレポジトリ *-- マスターデプロイメント

    class マスター照合サービス {
        照合()
    }
    マスター照合サービス *-- マスターデプロイメント
    マスター照合サービス *-- デプロイメント

    class デプロイメントアプリ {
        初期化()
        ワーキングディレクトリでマスターデプロイメントを取得()
        ワーキングディレクトリでデプロイメントを複数取得()
        オブジェクト追加()
        コマンド追加()
        クレデンシャル追加()
        デプロイメント追加()
        デプロイメント切り替え()
        デプロイ実行()
    }
    デプロイメントアプリ *-- デプロイメント
    デプロイメントアプリ *-- デプロイメントレポジトリ
    デプロイメントアプリ *-- マスターデプロイメント
    デプロイメントアプリ *-- マスターデプロイメントレポジトリ
    デプロイメントアプリ *-- マスター照合サービス
    デプロイメントアプリ *-- オブジェクトドメイン.オブジェクトアプリ
    デプロイメントアプリ *-- コマンドドメイン.コマンドアプリ
    デプロイメントアプリ *-- クレデンシャルドメイン.クレデンシャルアプリ
}

mix_actor ユーザー

ユーザー *-- デプロイメントドメイン.デプロイメントアプリ
ユーザー *-- オブジェクトドメイン.オブジェクトアプリ
ユーザー *-- コマンドドメイン.コマンドアプリ
ユーザー *-- クレデンシャルドメイン.クレデンシャルアプリ

@enduml
